"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/profiles/random/route";
exports.ids = ["app/api/profiles/random/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Frandom%2Froute&page=%2Fapi%2Fprofiles%2Frandom%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Frandom%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Frandom%2Froute&page=%2Fapi%2Fprofiles%2Frandom%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Frandom%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_vik_GTRanked_app_api_profiles_random_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/profiles/random/route.ts */ \"(rsc)/./app/api/profiles/random/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/profiles/random/route\",\n        pathname: \"/api/profiles/random\",\n        filename: \"route\",\n        bundlePath: \"app/api/profiles/random/route\"\n    },\n    resolvedPagePath: \"/Users/vik/GTRanked/app/api/profiles/random/route.ts\",\n    nextConfigOutput,\n    userland: _Users_vik_GTRanked_app_api_profiles_random_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/profiles/random/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9maWxlcyUyRnJhbmRvbSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZmlsZXMlMkZyYW5kb20lMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9maWxlcyUyRnJhbmRvbSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnZpayUyRkdUUmFua2VkJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnZpayUyRkdUUmFua2VkJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3RyYW5rZWQvP2EwNGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3Zpay9HVFJhbmtlZC9hcHAvYXBpL3Byb2ZpbGVzL3JhbmRvbS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvZmlsZXMvcmFuZG9tL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvZmlsZXMvcmFuZG9tXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm9maWxlcy9yYW5kb20vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvdmlrL0dUUmFua2VkL2FwcC9hcGkvcHJvZmlsZXMvcmFuZG9tL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9wcm9maWxlcy9yYW5kb20vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Frandom%2Froute&page=%2Fapi%2Fprofiles%2Frandom%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Frandom%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/profiles/random/route.ts":
/*!******************************************!*\
  !*** ./app/api/profiles/random/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Import the JavaScript version of the profiles module\nconst { getRandomProfiles, getProfileById } = __webpack_require__(/*! @/lib/profiles-js */ \"(rsc)/./lib/profiles-js.js\");\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const excludeParam = searchParams.get(\"exclude\") || \"\";\n        // Convert exclude list to array of numbers\n        const excludeIds = excludeParam ? excludeParam.split(\",\").map((id)=>parseInt(id, 10)).filter((id)=>!isNaN(id)) : [];\n        console.log(`Fetching random profiles with excludeIds: ${JSON.stringify(excludeIds)}`);\n        // Get random profiles from Supabase\n        const basicProfiles = await getRandomProfiles(excludeIds);\n        // Check if profiles need enrichment and enrich them\n        const detailedProfiles = [];\n        for (const profile of basicProfiles){\n            try {\n                let enrichedProfile;\n                // Check if profile needs enrichment\n                if (profile.is_enriched !== true) {\n                    console.log(`Profile ${profile.id} (${profile.full_name}) needs enrichment`);\n                    // Call the enrichment endpoint\n                    const enrichResponse = await fetch(`${process.env.VERCEL_URL || \"http://localhost:3000\"}/api/profiles/enrich?aviato_id=${profile.aviato_id}`, {\n                        method: \"GET\"\n                    });\n                    if (!enrichResponse.ok) {\n                        console.error(`Error enriching profile ${profile.id}: ${enrichResponse.statusText}`);\n                        continue;\n                    }\n                    const enrichResult = await enrichResponse.json();\n                    enrichedProfile = enrichResult.profile;\n                    console.log(`Successfully enriched profile ${profile.id} ${enrichResult.enriched ? \"(newly enriched)\" : \"(already enriched)\"}`);\n                } else {\n                    // Profile is already enriched, just get the details\n                    enrichedProfile = await getProfileById(profile.id);\n                    console.log(`Using already enriched profile ${profile.id}`);\n                }\n                if (enrichedProfile) {\n                    detailedProfiles.push(enrichedProfile);\n                }\n            } catch (error) {\n                console.error(`Error processing profile ${profile.id}:`, error);\n            }\n        }\n        // Transform profiles to match frontend format\n        const transformedProfiles = detailedProfiles.map((profile)=>{\n            // Get experiences from both direct profile fields and experience table\n            const experiences = [];\n            // Add top experiences from direct profile fields if available\n            if (profile.exp1_title && profile.exp1_company) {\n                const startYear = profile.exp1_start_date ? new Date(profile.exp1_start_date).getFullYear() : \"\";\n                const endYear = profile.exp1_is_current ? \"Present\" : profile.exp1_end_date ? new Date(profile.exp1_end_date).getFullYear() : \"\";\n                const duration = startYear && endYear ? `${startYear} - ${endYear}` : \"\";\n                experiences.push({\n                    title: profile.exp1_title,\n                    company: profile.exp1_company,\n                    duration\n                });\n            }\n            if (profile.exp2_title && profile.exp2_company) {\n                const startYear = profile.exp2_start_date ? new Date(profile.exp2_start_date).getFullYear() : \"\";\n                const endYear = profile.exp2_is_current ? \"Present\" : profile.exp2_end_date ? new Date(profile.exp2_end_date).getFullYear() : \"\";\n                const duration = startYear && endYear ? `${startYear} - ${endYear}` : \"\";\n                experiences.push({\n                    title: profile.exp2_title,\n                    company: profile.exp2_company,\n                    duration\n                });\n            }\n            if (profile.exp3_title && profile.exp3_company) {\n                const startYear = profile.exp3_start_date ? new Date(profile.exp3_start_date).getFullYear() : \"\";\n                const endYear = profile.exp3_is_current ? \"Present\" : profile.exp3_end_date ? new Date(profile.exp3_end_date).getFullYear() : \"\";\n                const duration = startYear && endYear ? `${startYear} - ${endYear}` : \"\";\n                experiences.push({\n                    title: profile.exp3_title,\n                    company: profile.exp3_company,\n                    duration\n                });\n            }\n            // Format additional experiences from experience table\n            if (profile.experience && profile.experience.length > 0) {\n                // Start at index 0 if we don't have any direct experiences, otherwise add to the existing ones\n                const additionalExperiences = profile.experience.map((exp)=>{\n                    const startYear = exp.start_date ? new Date(exp.start_date).getFullYear() : \"\";\n                    const endYear = exp.is_current ? \"Present\" : exp.end_date ? new Date(exp.end_date).getFullYear() : \"\";\n                    const duration = startYear && endYear ? `${startYear} - ${endYear}` : \"\";\n                    return {\n                        title: exp.title || \"\",\n                        company: exp.company_name || \"\",\n                        duration\n                    };\n                });\n                // Add any experiences that aren't already included (avoid duplicates)\n                for (const exp of additionalExperiences){\n                    const isDuplicate = experiences.some((e)=>e.title === exp.title && e.company === exp.company);\n                    if (!isDuplicate) {\n                        experiences.push(exp);\n                    }\n                }\n            }\n            // Get skills from skills table\n            const skills = profile.skills ? profile.skills.map((skill)=>skill.name || \"\") : [];\n            // Get degree from education if available\n            const degree = profile.education && profile.education.length > 0 ? profile.education[0].degree || \"BS\" : \"BS\";\n            // Extract major from headline if it's not available in the profile\n            let major = profile.major || \"\";\n            // If major is empty, try to extract it from the headline\n            if (!major && profile.headline) {\n                // Look for common patterns like \"CS @ Georgia Tech\" or \"studying Computer Science at GT\"\n                const headline = profile.headline.toLowerCase();\n                if (headline.includes(\"cs @\") || headline.includes(\"cs at\")) {\n                    major = \"Computer Science\";\n                } else if (headline.includes(\"computer science\")) {\n                    major = \"Computer Science\";\n                } else if (headline.includes(\"electrical engineering\")) {\n                    major = \"Electrical Engineering\";\n                } else if (headline.includes(\"mechanical engineering\")) {\n                    major = \"Mechanical Engineering\";\n                } else if (headline.includes(\"business\")) {\n                    major = \"Business Administration\";\n                } else if (headline.includes(\"data science\")) {\n                    major = \"Data Science\";\n                }\n            }\n            // If still no major found, use part of the degree if it contains \"in\"\n            if (!major && degree && degree.includes(\" in \")) {\n                const parts = degree.split(\" in \");\n                if (parts.length > 1) {\n                    major = parts[1];\n                }\n            }\n            return {\n                id: profile.id.toString(),\n                name: profile.full_name || \"Unknown\",\n                title: profile.title || \"\",\n                company: profile.company || \"\",\n                major: major || \"Unknown Major\",\n                graduationYear: profile.graduation_year || 0,\n                isStudent: profile.is_student,\n                elo: profile.elo_rating,\n                location: profile.location || \"\",\n                avatar: `/avatars/${Math.floor(Math.random() * 10) + 1}.png`,\n                degree,\n                skills,\n                experiences,\n                linkedinUrl: profile.linkedin_url || null\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            profiles: transformedProfiles\n        });\n    } catch (error) {\n        console.error(\"Error fetching random profiles:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch random profiles\",\n            message: error instanceof Error ? error.message : \"Unknown error\",\n            profiles: []\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/profiles/random/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/profiles-js.js":
/*!****************************!*\
  !*** ./lib/profiles-js.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Import supabase client\n\nconst { supabase } = __webpack_require__(/*! ./supabase.js */ \"(rsc)/./lib/supabase.js\");\n/**\n * Get profiles with pagination, filtering and sorting\n */ async function getProfiles({ page = 1, limit = 10, query = \"\", filter = \"all\", sort = \"elo\" }) {\n    try {\n        // Calculate offset\n        const offset = (page - 1) * limit;\n        // Start building query\n        let profileQuery = supabase.from(\"profiles\").select(\"*\", {\n            count: \"exact\"\n        });\n        // Add search filter if query is provided\n        if (query) {\n            profileQuery = profileQuery.or(`full_name.ilike.%${query}%,title.ilike.%${query}%,company.ilike.%${query}%,major.ilike.%${query}%`);\n        }\n        // Add category filter\n        if (filter !== \"all\") {\n            if (filter === \"students\") {\n                profileQuery = profileQuery.eq(\"is_student\", true);\n            } else if (filter === \"alumni\") {\n                profileQuery = profileQuery.eq(\"is_student\", false);\n            } else {\n                // Assume filter is a major\n                profileQuery = profileQuery.ilike(\"major\", `%${filter}%`);\n            }\n        }\n        // Add sorting\n        if (sort === \"elo\") {\n            profileQuery = profileQuery.order(\"elo_rating\", {\n                ascending: false\n            });\n        } else if (sort === \"name\") {\n            profileQuery = profileQuery.order(\"full_name\");\n        } else if (sort === \"graduation\") {\n            profileQuery = profileQuery.order(\"graduation_year\");\n        }\n        // Add pagination\n        profileQuery = profileQuery.range(offset, offset + limit - 1);\n        // Execute query\n        const { data: profiles, error, count } = await profileQuery;\n        if (error) throw error;\n        // Get education and work experience for each profile\n        const profilesWithDetails = [];\n        for (const profile of profiles || []){\n            const { data: education } = await supabase.from(\"education\").select(\"*\").eq(\"profile_id\", profile.id);\n            const { data: experience } = await supabase.from(\"work_experience\").select(\"*\").eq(\"profile_id\", profile.id).order(\"is_current\", {\n                ascending: false\n            }).order(\"end_date\", {\n                ascending: false\n            });\n            profilesWithDetails.push({\n                ...profile,\n                education: education || [],\n                experience: experience || []\n            });\n        }\n        return {\n            profiles: profilesWithDetails,\n            total: count || 0,\n            totalPages: Math.ceil((count || 0) / limit)\n        };\n    } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n        throw error;\n    }\n}\n/**\n * Get a single profile by ID with education and work experience\n */ async function getProfileById(id) {\n    try {\n        const { data: profile, error } = await supabase.from(\"profiles\").select(\"*\").eq(\"id\", id).single();\n        if (error) throw error;\n        if (!profile) return null;\n        const { data: education } = await supabase.from(\"education\").select(\"*\").eq(\"profile_id\", id);\n        const { data: experience } = await supabase.from(\"work_experience\").select(\"*\").eq(\"profile_id\", id).order(\"is_current\", {\n            ascending: false\n        }).order(\"end_date\", {\n            ascending: false\n        });\n        // Get skills for this profile\n        const { data: skills } = await supabase.from(\"skills\").select(\"*\").eq(\"profile_id\", id);\n        return {\n            ...profile,\n            education: education || [],\n            experience: experience || [],\n            skills: skills || []\n        };\n    } catch (error) {\n        console.error(`Error fetching profile with ID ${id}:`, error);\n        return null;\n    }\n}\n/**\n * Get two random profiles, excluding specified IDs\n */ async function getRandomProfiles(excludeIds = []) {\n    // Ensure excludeIds is an array of numbers\n    const safeExcludeIds = Array.isArray(excludeIds) ? excludeIds.filter((id)=>typeof id === \"number\" && !isNaN(id)) : [];\n    console.log(`DIAGNOSTICS - getRandomProfiles called with excludeIds:`, safeExcludeIds);\n    try {\n        // Check if we have any profiles at all first\n        const { count: profileCount, error: countError } = await supabase.from(\"profiles\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        });\n        if (countError) {\n            console.error(\"Error counting profiles:\", countError);\n            throw new Error(`Could not count profiles: ${countError.message}`);\n        }\n        console.log(`DIAGNOSTICS - Total profile count: ${profileCount}`);\n        if (profileCount === 0) {\n            console.error(\"No profiles found in database\");\n            throw new Error(\"No profiles found in database\");\n        }\n        // Get all profiles (limit to a reasonable number)\n        const { data: allProfiles, error: profilesError } = await supabase.from(\"profiles\").select(\"*\").limit(100); // Limit to 100 profiles max for performance\n        if (profilesError) {\n            console.error(\"Error fetching profiles:\", profilesError);\n            throw new Error(`Could not fetch profiles: ${profilesError.message}`);\n        }\n        if (!allProfiles || allProfiles.length === 0) {\n            throw new Error(\"No profiles returned from database\");\n        }\n        console.log(`DIAGNOSTICS - Fetched ${allProfiles.length} profiles successfully`);\n        // Filter out excluded profiles for the first selection\n        let availableForFirst = allProfiles;\n        if (safeExcludeIds.length > 0) {\n            availableForFirst = allProfiles.filter((profile)=>!safeExcludeIds.includes(profile.id));\n            // If no profiles left after exclusion, use all profiles\n            if (availableForFirst.length === 0) {\n                console.warn(\"No profiles left after exclusion, using all profiles for first selection\");\n                availableForFirst = allProfiles;\n            }\n        }\n        // Select a random first profile\n        const randomFirstIndex = Math.floor(Math.random() * availableForFirst.length);\n        const firstProfile = availableForFirst[randomFirstIndex];\n        console.log(`DIAGNOSTICS - First profile selected: ${firstProfile.id}`);\n        // Filter profiles for second selection (exclude the first profile and others)\n        const combinedExcludeIds = [\n            ...safeExcludeIds,\n            firstProfile.id\n        ];\n        let availableForSecond = allProfiles.filter((profile)=>!combinedExcludeIds.includes(profile.id));\n        // If no profiles available for second selection, just exclude the first profile\n        if (availableForSecond.length === 0) {\n            console.warn(\"No profiles available for second selection after exclusions\");\n            availableForSecond = allProfiles.filter((profile)=>profile.id !== firstProfile.id);\n            // If still no profiles available, return just the first profile\n            if (availableForSecond.length === 0) {\n                console.warn(\"Could not find any profile different from the first one\");\n                return [\n                    firstProfile\n                ];\n            }\n        }\n        // Select a random second profile\n        const randomSecondIndex = Math.floor(Math.random() * availableForSecond.length);\n        const secondProfile = availableForSecond[randomSecondIndex];\n        console.log(`DIAGNOSTICS - Second profile selected: ${secondProfile.id}`);\n        // Return both profiles\n        return [\n            firstProfile,\n            secondProfile\n        ];\n    } catch (err) {\n        console.error(\"Exception in getRandomProfiles:\", err);\n        throw new Error(`Failed to get random profiles: ${err.message}`);\n    }\n}\n/**\n * Record a vote in the database\n */ async function recordVote(leftProfileId, rightProfileId, winnerId, sessionId) {\n    try {\n        const voteData = {\n            winner_id: winnerId,\n            left_profile_id: leftProfileId,\n            right_profile_id: rightProfileId,\n            voter_session_id: sessionId\n        };\n        const { error } = await supabase.from(\"votes\").insert([\n            voteData\n        ]);\n        if (error) throw error;\n    } catch (error) {\n        console.error(\"Error recording vote:\", error);\n        throw error;\n    }\n}\n/**\n * Get recent votes for a user session\n */ async function getRecentVotes(sessionId, limit = 5) {\n    try {\n        const { data, error } = await supabase.from(\"votes\").select(\"*\").eq(\"voter_session_id\", sessionId).order(\"created_at\", {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error(\"Error fetching recent votes:\", error);\n        return [];\n    }\n}\n/**\n * Get top profiles by ELO rating\n */ async function getTopProfiles(limit = 10) {\n    try {\n        const { data, error } = await supabase.from(\"profiles\").select(\"*\").order(\"elo_rating\", {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error(\"Error fetching top profiles:\", error);\n        return [];\n    }\n}\n/**\n * Count profiles in the database\n */ async function countProfiles() {\n    try {\n        const { count, error } = await supabase.from(\"profiles\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        });\n        if (error) {\n            console.error(\"Error counting profiles:\", error);\n            throw error;\n        }\n        return count || 0;\n    } catch (error) {\n        console.error(\"Error in countProfiles:\", error);\n        return 0;\n    }\n}\nmodule.exports = {\n    getProfiles,\n    getProfileById,\n    getRandomProfiles,\n    recordVote,\n    getRecentVotes,\n    getTopProfiles,\n    countProfiles\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/profiles-js.js\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { createClient } = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n(__webpack_require__(/*! dotenv */ \"(rsc)/./node_modules/dotenv/lib/main.js\").config)({\n    path: \".env.local\"\n});\n// Get environment variables with fallbacks for development\nconst supabaseUrl = \"https://qbzwhueywwpqkucwfnsb.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFiendodWV5d3dwcWt1Y3dmbnNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4MDk4MzEsImV4cCI6MjA1OTM4NTgzMX0.YiZec-9dg4z32pqCuSGGB3uyqrEZs5zm-b_unS_2czs\" || 0;\n// Create Supabase client\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        persistSession: false\n    }\n});\n// Log initialization for debugging\nconsole.log(`Supabase JS client initialized with URL: ${supabaseUrl.substring(0, 20)}...`);\n// Export the client\nmodule.exports = {\n    supabase\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBRUEsWUFBWSxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDLDhGQUF1QjtBQUN4REEscUZBQXdCLENBQUM7SUFBRUUsTUFBTTtBQUFhO0FBRTlDLDJEQUEyRDtBQUMzRCxNQUFNQyxjQUNKQywwQ0FBb0MsSUFDcEMsQ0FBdUM7QUFDekMsTUFBTUcsa0JBQ0pILGtOQUF5QyxJQUFJLENBQWU7QUFFOUQseUJBQXlCO0FBQ3pCLE1BQU1LLFdBQVdWLGFBQWFJLGFBQWFJLGlCQUFpQjtJQUMxREcsTUFBTTtRQUNKQyxnQkFBZ0I7SUFDbEI7QUFDRjtBQUVBLG1DQUFtQztBQUNuQ0MsUUFBUUMsR0FBRyxDQUNULENBQUMseUNBQXlDLEVBQUVWLFlBQVlXLFNBQVMsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDO0FBRy9FLG9CQUFvQjtBQUNwQkMsT0FBT0MsT0FBTyxHQUFHO0lBQUVQO0FBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ndHJhbmtlZC8uL2xpYi9zdXBhYmFzZS5qcz8xNTk4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY3JlYXRlQ2xpZW50IH0gPSByZXF1aXJlKFwiQHN1cGFiYXNlL3N1cGFiYXNlLWpzXCIpO1xucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoeyBwYXRoOiBcIi5lbnYubG9jYWxcIiB9KTtcblxuLy8gR2V0IGVudmlyb25tZW50IHZhcmlhYmxlcyB3aXRoIGZhbGxiYWNrcyBmb3IgZGV2ZWxvcG1lbnRcbmNvbnN0IHN1cGFiYXNlVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8XG4gIFwiaHR0cHM6Ly95b3VyLXN1cGFiYXNlLXVybC5zdXBhYmFzZS5jb1wiO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgXCJ5b3VyLWFub24ta2V5XCI7XG5cbi8vIENyZWF0ZSBTdXBhYmFzZSBjbGllbnRcbmNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgYXV0aDoge1xuICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZSxcbiAgfSxcbn0pO1xuXG4vLyBMb2cgaW5pdGlhbGl6YXRpb24gZm9yIGRlYnVnZ2luZ1xuY29uc29sZS5sb2coXG4gIGBTdXBhYmFzZSBKUyBjbGllbnQgaW5pdGlhbGl6ZWQgd2l0aCBVUkw6ICR7c3VwYWJhc2VVcmwuc3Vic3RyaW5nKDAsIDIwKX0uLi5gXG4pO1xuXG4vLyBFeHBvcnQgdGhlIGNsaWVudFxubW9kdWxlLmV4cG9ydHMgPSB7IHN1cGFiYXNlIH07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwicmVxdWlyZSIsImNvbmZpZyIsInBhdGgiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiYXV0aCIsInBlcnNpc3RTZXNzaW9uIiwiY29uc29sZSIsImxvZyIsInN1YnN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/dotenv","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Frandom%2Froute&page=%2Fapi%2Fprofiles%2Frandom%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Frandom%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();