"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/profiles/enrich/route";
exports.ids = ["app/api/profiles/enrich/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Fenrich%2Froute&page=%2Fapi%2Fprofiles%2Fenrich%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Fenrich%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Fenrich%2Froute&page=%2Fapi%2Fprofiles%2Fenrich%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Fenrich%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_vik_GTRanked_app_api_profiles_enrich_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/profiles/enrich/route.ts */ \"(rsc)/./app/api/profiles/enrich/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/profiles/enrich/route\",\n        pathname: \"/api/profiles/enrich\",\n        filename: \"route\",\n        bundlePath: \"app/api/profiles/enrich/route\"\n    },\n    resolvedPagePath: \"/Users/vik/GTRanked/app/api/profiles/enrich/route.ts\",\n    nextConfigOutput,\n    userland: _Users_vik_GTRanked_app_api_profiles_enrich_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/profiles/enrich/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9maWxlcyUyRmVucmljaCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZmlsZXMlMkZlbnJpY2glMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9maWxlcyUyRmVucmljaCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnZpayUyRkdUUmFua2VkJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnZpayUyRkdUUmFua2VkJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3RyYW5rZWQvP2E1YjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3Zpay9HVFJhbmtlZC9hcHAvYXBpL3Byb2ZpbGVzL2VucmljaC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvZmlsZXMvZW5yaWNoL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvZmlsZXMvZW5yaWNoXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm9maWxlcy9lbnJpY2gvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvdmlrL0dUUmFua2VkL2FwcC9hcGkvcHJvZmlsZXMvZW5yaWNoL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9wcm9maWxlcy9lbnJpY2gvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Fenrich%2Froute&page=%2Fapi%2Fprofiles%2Fenrich%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Fenrich%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/profiles/enrich/route.ts":
/*!******************************************!*\
  !*** ./app/api/profiles/enrich/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Import the JavaScript version of the profiles module using CommonJS require\nconst { supabase } = __webpack_require__(/*! @/lib/supabase.js */ \"(rsc)/./lib/supabase.js\");\n// Aviato API configuration\nconst AVIATO_API_KEY = process.env.AVIATO_API_KEY;\nconst AVIATO_API_BASE_URL = \"https://data.api.aviato.co\";\n// Helper function to extract URLs from social links\nfunction extractUrls(urls) {\n    if (!urls) return {\n        linkedinUrl: null,\n        twitterUrl: null,\n        githubUrl: null\n    };\n    let linkedinUrl = null;\n    let twitterUrl = null;\n    let githubUrl = null;\n    if (urls.linkedin && typeof urls.linkedin === \"string\") {\n        linkedinUrl = urls.linkedin.startsWith(\"http\") ? urls.linkedin : `https://${urls.linkedin}`;\n    } else if (urls.linkedin && Array.isArray(urls.linkedin) && urls.linkedin.length > 0) {\n        linkedinUrl = urls.linkedin[0].startsWith(\"http\") ? urls.linkedin[0] : `https://${urls.linkedin[0]}`;\n    }\n    if (urls.twitter && typeof urls.twitter === \"string\") {\n        twitterUrl = urls.twitter.startsWith(\"http\") ? urls.twitter : `https://${urls.twitter}`;\n    } else if (urls.twitter && Array.isArray(urls.twitter) && urls.twitter.length > 0) {\n        twitterUrl = urls.twitter[0].startsWith(\"http\") ? urls.twitter[0] : `https://${urls.twitter[0]}`;\n    }\n    if (urls.github && typeof urls.github === \"string\") {\n        githubUrl = urls.github.startsWith(\"http\") ? urls.github : `https://${urls.github}`;\n    } else if (urls.github && Array.isArray(urls.github) && urls.github.length > 0) {\n        githubUrl = urls.github[0].startsWith(\"http\") ? urls.github[0] : `https://${urls.github[0]}`;\n    }\n    return {\n        linkedinUrl,\n        twitterUrl,\n        githubUrl\n    };\n}\n// On-demand profile enrichment endpoint\nasync function GET(request, { params }) {\n    try {\n        // Get the aviato_id from the URL\n        const url = new URL(request.url);\n        const aviato_id = url.searchParams.get(\"aviato_id\");\n        if (!aviato_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing aviato_id parameter\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`Processing enrichment request for aviato_id: ${aviato_id}`);\n        // Check if profile exists in database\n        const { data: profile, error: profileError } = await supabase.from(\"profiles\").select(\"*\").eq(\"aviato_id\", aviato_id).single();\n        if (profileError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Error fetching profile\",\n                message: profileError.message\n            }, {\n                status: 500\n            });\n        }\n        if (!profile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Profile not found\",\n                message: `No profile found with aviato_id: ${aviato_id}`\n            }, {\n                status: 404\n            });\n        }\n        // If profile is already enriched, return it immediately\n        if (profile.is_enriched) {\n            console.log(`Profile ${profile.full_name} (ID: ${profile.id}) is already enriched`);\n            // Fetch related data (education, experience, skills)\n            const { data: education } = await supabase.from(\"education\").select(\"*\").eq(\"profile_id\", profile.id);\n            const { data: experience } = await supabase.from(\"work_experience\").select(\"*\").eq(\"profile_id\", profile.id).order(\"is_current\", {\n                ascending: false\n            }).order(\"end_date\", {\n                ascending: false\n            });\n            const { data: skills } = await supabase.from(\"skills\").select(\"*\").eq(\"profile_id\", profile.id);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                profile: {\n                    ...profile,\n                    education: education || [],\n                    experience: experience || [],\n                    skills: skills || []\n                },\n                enriched: false // Indicates we didn't need to perform enrichment\n            });\n        }\n        // If we get here, the profile needs enrichment\n        console.log(`Enriching profile ${profile.full_name} (ID: ${profile.id})`);\n        // Make API request to Aviato enrich endpoint\n        if (!AVIATO_API_KEY) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"API key missing\",\n                message: \"Aviato API key not found in environment variables\"\n            }, {\n                status: 500\n            });\n        }\n        try {\n            // Parameters for the enrich endpoint - include needs to be a comma-separated string, not an array\n            const includeValue = \"EDUCATION,EXPERIENCE,DEGREES,SKILLS\";\n            const url = `${AVIATO_API_BASE_URL}/person/enrich?id=${aviato_id}&include=${includeValue}`;\n            console.log(`Making API request to Aviato enrich: ${url}`);\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": `Bearer ${AVIATO_API_KEY}`\n                }\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Aviato API error: ${response.status} ${errorText}`);\n            }\n            const enrichedData = await response.json();\n            console.log(`Successfully enriched profile data for ${profile.full_name}`);\n            // Extract relevant information from enriched data\n            const { linkedinUrl, twitterUrl, githubUrl } = extractUrls(enrichedData.urls);\n            // Debug the experience data structure\n            console.log(`Experience data structure sample:`, JSON.stringify(enrichedData.experienceList && enrichedData.experienceList.length > 0 ? enrichedData.experienceList[0] : {}, null, 2).substring(0, 500));\n            // Get top 3 experiences if available\n            const experiences = enrichedData.experienceList || [];\n            experiences.sort((a, b)=>{\n                if (a.isCurrent && !b.isCurrent) return -1;\n                if (!a.isCurrent && b.isCurrent) return 1;\n                const aDate = a.endDate ? new Date(a.endDate) : new Date();\n                const bDate = b.endDate ? new Date(b.endDate) : new Date();\n                return bDate.getTime() - aDate.getTime();\n            });\n            // Helper function to extract company name properly\n            function extractCompanyName(expItem) {\n                if (!expItem) return \"\";\n                // Debug the company structure\n                console.log(`Company structure:`, JSON.stringify(expItem, null, 2).substring(0, 200));\n                // If company is a string, use it directly\n                if (typeof expItem.company === \"string\") return expItem.company;\n                // If company is an object with a name property, use that\n                if (expItem.company && typeof expItem.company === \"object\" && expItem.company.name) {\n                    return expItem.company.name;\n                }\n                // If company is an object that IS the name property (e.g., structure seen in the UI)\n                if (expItem.name && typeof expItem.name === \"string\") {\n                    return expItem.name;\n                }\n                // If we have an industryList array with name properties\n                if (expItem.industryList && Array.isArray(expItem.industryList)) {\n                    const names = expItem.industryList.map((item)=>typeof item === \"string\" ? item : item.name ? item.name : \"\").filter(Boolean);\n                    if (names.length > 0) {\n                        return names[0];\n                    }\n                }\n                // Special case for malformed data showing in UI\n                if (typeof expItem === \"string\") {\n                    try {\n                        // Try to parse it if it's a JSON string\n                        const parsed = JSON.parse(expItem);\n                        if (parsed.name) return parsed.name;\n                    } catch (e) {\n                        // If it's not valid JSON, just return the string itself\n                        return expItem;\n                    }\n                }\n                // Fallback for debugging - return a placeholder with the structure\n                console.log(`Could not extract company name from:`, typeof expItem, Object.keys(expItem).join(\", \"));\n                // Fall back to empty string if we can't determine\n                return \"Unknown Company\";\n            }\n            // Helper function to extract title properly\n            function extractTitle(expItem) {\n                if (!expItem) return \"\";\n                // If title is a string, use it directly\n                if (typeof expItem.title === \"string\") return expItem.title;\n                // Fall back to empty string if we can't determine\n                return \"\";\n            }\n            // Extract education, degree, and major information\n            const education = enrichedData.educationList || [];\n            // Get top 3 experiences\n            const exp1 = experiences[0] || null;\n            const exp2 = experiences[1] || null;\n            const exp3 = experiences[2] || null;\n            // Prepare profile data update\n            const profileUpdate = {\n                // Basic info from the enriched data\n                headline: enrichedData.headline || profile.headline,\n                title: exp1 ? extractTitle(exp1) : profile.title,\n                company: exp1 ? extractCompanyName(exp1) : profile.company,\n                // Update social media links\n                linkedin_url: linkedinUrl,\n                twitter_url: twitterUrl,\n                github_url: githubUrl,\n                // Experience 1\n                exp1_title: exp1 ? extractTitle(exp1) : null,\n                exp1_company: exp1 ? extractCompanyName(exp1) : null,\n                exp1_start_date: exp1 ? exp1.startDate : null,\n                exp1_end_date: exp1 ? exp1.endDate : null,\n                exp1_description: exp1 ? exp1.description : \"\",\n                exp1_is_current: exp1 ? exp1.isCurrent : false,\n                // Experience 2\n                exp2_title: exp2 ? extractTitle(exp2) : null,\n                exp2_company: exp2 ? extractCompanyName(exp2) : null,\n                exp2_start_date: exp2 ? exp2.startDate : null,\n                exp2_end_date: exp2 ? exp2.endDate : null,\n                exp2_description: exp2 ? exp2.description : \"\",\n                exp2_is_current: exp2 ? exp2.isCurrent : false,\n                // Experience 3\n                exp3_title: exp3 ? extractTitle(exp3) : null,\n                exp3_company: exp3 ? extractCompanyName(exp3) : null,\n                exp3_start_date: exp3 ? exp3.startDate : null,\n                exp3_end_date: exp3 ? exp3.endDate : null,\n                exp3_description: exp3 ? exp3.description : \"\",\n                exp3_is_current: exp3 ? exp3.isCurrent : false,\n                // Mark profile as enriched\n                is_enriched: true,\n                last_updated: new Date().toISOString()\n            };\n            // Update the profile in the database\n            const { data: updatedProfile, error: updateError } = await supabase.from(\"profiles\").update(profileUpdate).eq(\"id\", profile.id).select().single();\n            if (updateError) {\n                throw new Error(`Error updating profile: ${updateError.message}`);\n            }\n            console.log(`Updated profile ${updatedProfile.full_name} (ID: ${updatedProfile.id})`);\n            // Insert education records\n            if (education.length > 0) {\n                for (const edu of education){\n                    const schoolId = edu.school ? edu.school.id : null;\n                    const schoolName = edu.name || (edu.school ? edu.school.fullName : \"\");\n                    let startDate = null;\n                    let endDate = null;\n                    if (edu.startDate) {\n                        try {\n                            startDate = new Date(edu.startDate);\n                        } catch (e) {\n                            console.log(`Could not parse start date: ${edu.startDate}`);\n                        }\n                    }\n                    if (edu.endDate) {\n                        try {\n                            endDate = new Date(edu.endDate);\n                        } catch (e) {\n                            console.log(`Could not parse end date: ${edu.endDate}`);\n                        }\n                    }\n                    // Find matching degree for this education\n                    let degree = \"\";\n                    let fieldOfStudy = \"\";\n                    if (enrichedData.degreeList) {\n                        const matchingDegree = enrichedData.degreeList.find((d)=>d.personEducationID === edu.id);\n                        if (matchingDegree) {\n                            degree = matchingDegree.name || \"\";\n                            // Try to extract field of study from degree name\n                            if (degree.includes(\" in \")) {\n                                const parts = degree.split(\" in \");\n                                if (parts.length > 1) {\n                                    fieldOfStudy = parts[1];\n                                }\n                            }\n                        }\n                    }\n                    const educationData = {\n                        profile_id: profile.id,\n                        school_id: schoolId,\n                        school_name: schoolName,\n                        degree: degree,\n                        field_of_study: fieldOfStudy,\n                        start_date: startDate,\n                        end_date: endDate\n                    };\n                    await supabase.from(\"education\").insert([\n                        educationData\n                    ]);\n                }\n                console.log(`Added ${education.length} education records for ${updatedProfile.full_name}`);\n            }\n            // Insert work experiences\n            if (experiences.length > 0) {\n                for (const exp of experiences){\n                    const workData = {\n                        profile_id: profile.id,\n                        company_name: extractCompanyName(exp),\n                        title: extractTitle(exp),\n                        start_date: exp.startDate,\n                        end_date: exp.endDate,\n                        is_current: exp.isCurrent\n                    };\n                    await supabase.from(\"work_experience\").insert([\n                        workData\n                    ]);\n                }\n                console.log(`Added ${experiences.length} work experiences for ${updatedProfile.full_name}`);\n            }\n            // Insert skills\n            const skills = enrichedData.skills || [];\n            if (skills.length > 0) {\n                for (const skill of skills){\n                    await supabase.from(\"skills\").insert([\n                        {\n                            profile_id: profile.id,\n                            skill_name: skill.name || skill\n                        }\n                    ]);\n                }\n                console.log(`Added ${skills.length} skills for ${updatedProfile.full_name}`);\n            }\n            // Fetch the complete updated profile data with related tables\n            const { data: education_data } = await supabase.from(\"education\").select(\"*\").eq(\"profile_id\", profile.id);\n            const { data: experience_data } = await supabase.from(\"work_experience\").select(\"*\").eq(\"profile_id\", profile.id).order(\"is_current\", {\n                ascending: false\n            }).order(\"end_date\", {\n                ascending: false\n            });\n            const { data: skills_data } = await supabase.from(\"skills\").select(\"*\").eq(\"profile_id\", profile.id);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                profile: {\n                    ...updatedProfile,\n                    education: education_data || [],\n                    experience: experience_data || [],\n                    skills: skills_data || []\n                },\n                enriched: true // Indicates we performed enrichment\n            });\n        } catch (error) {\n            console.error(`Error enriching profile:`, error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Enrichment failed\",\n                message: error.message\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(`Unexpected error:`, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Server error\",\n            message: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3Byb2ZpbGVzL2VucmljaC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUczQyw4RUFBOEU7QUFDOUUsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMsa0RBQW1CO0FBRWhELDJCQUEyQjtBQUMzQixNQUFNQyxpQkFBaUJDLFFBQVFDLEdBQUcsQ0FBQ0YsY0FBYztBQUNqRCxNQUFNRyxzQkFBc0I7QUFFNUIsb0RBQW9EO0FBQ3BELFNBQVNDLFlBQVlDLElBQVM7SUFDNUIsSUFBSSxDQUFDQSxNQUFNLE9BQU87UUFBRUMsYUFBYTtRQUFNQyxZQUFZO1FBQU1DLFdBQVc7SUFBSztJQUV6RSxJQUFJRixjQUFjO0lBQ2xCLElBQUlDLGFBQWE7SUFDakIsSUFBSUMsWUFBWTtJQUVoQixJQUFJSCxLQUFLSSxRQUFRLElBQUksT0FBT0osS0FBS0ksUUFBUSxLQUFLLFVBQVU7UUFDdERILGNBQWNELEtBQUtJLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLFVBQVVMLEtBQUtJLFFBQVEsR0FBRyxDQUFDLFFBQVEsRUFBRUosS0FBS0ksUUFBUSxDQUFDLENBQUM7SUFDN0YsT0FBTyxJQUFJSixLQUFLSSxRQUFRLElBQUlFLE1BQU1DLE9BQU8sQ0FBQ1AsS0FBS0ksUUFBUSxLQUFLSixLQUFLSSxRQUFRLENBQUNJLE1BQU0sR0FBRyxHQUFHO1FBQ3BGUCxjQUFjRCxLQUFLSSxRQUFRLENBQUMsRUFBRSxDQUFDQyxVQUFVLENBQUMsVUFBVUwsS0FBS0ksUUFBUSxDQUFDLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRUosS0FBS0ksUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RHO0lBRUEsSUFBSUosS0FBS1MsT0FBTyxJQUFJLE9BQU9ULEtBQUtTLE9BQU8sS0FBSyxVQUFVO1FBQ3BEUCxhQUFhRixLQUFLUyxPQUFPLENBQUNKLFVBQVUsQ0FBQyxVQUFVTCxLQUFLUyxPQUFPLEdBQUcsQ0FBQyxRQUFRLEVBQUVULEtB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RTlCLE9BQU8xQyxxREFBWUEsQ0FBQzJCLElBQUksQ0FBQztnQkFDdkJNLFNBQVM7b0JBQ1AsR0FBR3lGLGNBQWM7b0JBQ2pCL0UsV0FBVytHLGtCQUFrQixFQUFFO29CQUMvQjlHLFlBQVkrRyxtQkFBbUIsRUFBRTtvQkFDakM1RyxRQUFRNkcsZUFBZSxFQUFFO2dCQUMzQjtnQkFDQTVHLFVBQVUsS0FBSyxvQ0FBb0M7WUFDckQ7UUFFRixFQUFFLE9BQU9wQixPQUFZO1lBQ25CRSxRQUFRRixLQUFLLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFQTtZQUMxQyxPQUFPNUIscURBQVlBLENBQUMyQixJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO2dCQUFxQlcsU0FBU1gsTUFBTVcsT0FBTztZQUFDLEdBQ3JEO2dCQUFFVixRQUFRO1lBQUk7UUFFbEI7SUFDRixFQUFFLE9BQU9ELE9BQVk7UUFDbkJFLFFBQVFGLEtBQUssQ0FBQyxDQUFDLGlCQUFpQixDQUFDLEVBQUVBO1FBQ25DLE9BQU81QixxREFBWUEsQ0FBQzJCLElBQUksQ0FDdEI7WUFBRUMsT0FBTztZQUFnQlcsU0FBU1gsTUFBTVcsT0FBTztRQUFDLEdBQ2hEO1lBQUVWLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3RyYW5rZWQvLi9hcHAvYXBpL3Byb2ZpbGVzL2VucmljaC9yb3V0ZS50cz83ZDg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5cbi8vIEltcG9ydCB0aGUgSmF2YVNjcmlwdCB2ZXJzaW9uIG9mIHRoZSBwcm9maWxlcyBtb2R1bGUgdXNpbmcgQ29tbW9uSlMgcmVxdWlyZVxuY29uc3QgeyBzdXBhYmFzZSB9ID0gcmVxdWlyZShcIkAvbGliL3N1cGFiYXNlLmpzXCIpO1xuXG4vLyBBdmlhdG8gQVBJIGNvbmZpZ3VyYXRpb25cbmNvbnN0IEFWSUFUT19BUElfS0VZID0gcHJvY2Vzcy5lbnYuQVZJQVRPX0FQSV9LRVk7XG5jb25zdCBBVklBVE9fQVBJX0JBU0VfVVJMID0gJ2h0dHBzOi8vZGF0YS5hcGkuYXZpYXRvLmNvJztcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGV4dHJhY3QgVVJMcyBmcm9tIHNvY2lhbCBsaW5rc1xuZnVuY3Rpb24gZXh0cmFjdFVybHModXJsczogYW55KSB7XG4gIGlmICghdXJscykgcmV0dXJuIHsgbGlua2VkaW5Vcmw6IG51bGwsIHR3aXR0ZXJVcmw6IG51bGwsIGdpdGh1YlVybDogbnVsbCB9O1xuICBcbiAgbGV0IGxpbmtlZGluVXJsID0gbnVsbDtcbiAgbGV0IHR3aXR0ZXJVcmwgPSBudWxsO1xuICBsZXQgZ2l0aHViVXJsID0gbnVsbDtcbiAgXG4gIGlmICh1cmxzLmxpbmtlZGluICYmIHR5cGVvZiB1cmxzLmxpbmtlZGluID09PSAnc3RyaW5nJykge1xuICAgIGxpbmtlZGluVXJsID0gdXJscy5saW5rZWRpbi5zdGFydHNXaXRoKCdodHRwJykgPyB1cmxzLmxpbmtlZGluIDogYGh0dHBzOi8vJHt1cmxzLmxpbmtlZGlufWA7XG4gIH0gZWxzZSBpZiAodXJscy5saW5rZWRpbiAmJiBBcnJheS5pc0FycmF5KHVybHMubGlua2VkaW4pICYmIHVybHMubGlua2VkaW4ubGVuZ3RoID4gMCkge1xuICAgIGxpbmtlZGluVXJsID0gdXJscy5saW5rZWRpblswXS5zdGFydHNXaXRoKCdodHRwJykgPyB1cmxzLmxpbmtlZGluWzBdIDogYGh0dHBzOi8vJHt1cmxzLmxpbmtlZGluWzBdfWA7XG4gIH1cbiAgXG4gIGlmICh1cmxzLnR3aXR0ZXIgJiYgdHlwZW9mIHVybHMudHdpdHRlciA9PT0gJ3N0cmluZycpIHtcbiAgICB0d2l0dGVyVXJsID0gdXJscy50d2l0dGVyLnN0YXJ0c1dpdGgoJ2h0dHAnKSA/IHVybHMudHdpdHRlciA6IGBodHRwczovLyR7dXJscy50d2l0dGVyfWA7XG4gIH0gZWxzZSBpZiAodXJscy50d2l0dGVyICYmIEFycmF5LmlzQXJyYXkodXJscy50d2l0dGVyKSAmJiB1cmxzLnR3aXR0ZXIubGVuZ3RoID4gMCkge1xuICAgIHR3aXR0ZXJVcmwgPSB1cmxzLnR3aXR0ZXJbMF0uc3RhcnRzV2l0aCgnaHR0cCcpID8gdXJscy50d2l0dGVyWzBdIDogYGh0dHBzOi8vJHt1cmxzLnR3aXR0ZXJbMF19YDtcbiAgfVxuICBcbiAgaWYgKHVybHMuZ2l0aHViICYmIHR5cGVvZiB1cmxzLmdpdGh1YiA9PT0gJ3N0cmluZycpIHtcbiAgICBnaXRodWJVcmwgPSB1cmxzLmdpdGh1Yi5zdGFydHNXaXRoKCdodHRwJykgPyB1cmxzLmdpdGh1YiA6IGBodHRwczovLyR7dXJscy5naXRodWJ9YDtcbiAgfSBlbHNlIGlmICh1cmxzLmdpdGh1YiAmJiBBcnJheS5pc0FycmF5KHVybHMuZ2l0aHViKSAmJiB1cmxzLmdpdGh1Yi5sZW5ndGggPiAwKSB7XG4gICAgZ2l0aHViVXJsID0gdXJscy5naXRodWJbMF0uc3RhcnRzV2l0aCgnaHR0cCcpID8gdXJscy5naXRodWJbMF0gOiBgaHR0cHM6Ly8ke3VybHMuZ2l0aHViWzBdfWA7XG4gIH1cbiAgXG4gIHJldHVybiB7IGxpbmtlZGluVXJsLCB0d2l0dGVyVXJsLCBnaXRodWJVcmwgfTtcbn1cblxuLy8gT24tZGVtYW5kIHByb2ZpbGUgZW5yaWNobWVudCBlbmRwb2ludFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBSZXF1ZXN0LCB7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBpZDogc3RyaW5nIH0gfSkge1xuICB0cnkge1xuICAgIC8vIEdldCB0aGUgYXZpYXRvX2lkIGZyb20gdGhlIFVSTFxuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IGF2aWF0b19pZCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdhdmlhdG9faWQnKTtcbiAgICBcbiAgICBpZiAoIWF2aWF0b19pZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiTWlzc2luZyBhdmlhdG9faWQgcGFyYW1ldGVyXCIgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coYFByb2Nlc3NpbmcgZW5yaWNobWVudCByZXF1ZXN0IGZvciBhdmlhdG9faWQ6ICR7YXZpYXRvX2lkfWApO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHByb2ZpbGUgZXhpc3RzIGluIGRhdGFiYXNlXG4gICAgY29uc3QgeyBkYXRhOiBwcm9maWxlLCBlcnJvcjogcHJvZmlsZUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3Byb2ZpbGVzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLmVxKCdhdmlhdG9faWQnLCBhdmlhdG9faWQpXG4gICAgICAuc2luZ2xlKCk7XG4gICAgXG4gICAgaWYgKHByb2ZpbGVFcnJvcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBcIkVycm9yIGZldGNoaW5nIHByb2ZpbGVcIiwgbWVzc2FnZTogcHJvZmlsZUVycm9yLm1lc3NhZ2UgfSxcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICApO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXByb2ZpbGUpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJQcm9maWxlIG5vdCBmb3VuZFwiLCBtZXNzYWdlOiBgTm8gcHJvZmlsZSBmb3VuZCB3aXRoIGF2aWF0b19pZDogJHthdmlhdG9faWR9YCB9LFxuICAgICAgICB7IHN0YXR1czogNDA0IH1cbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIC8vIElmIHByb2ZpbGUgaXMgYWxyZWFkeSBlbnJpY2hlZCwgcmV0dXJuIGl0IGltbWVkaWF0ZWx5XG4gICAgaWYgKHByb2ZpbGUuaXNfZW5yaWNoZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKGBQcm9maWxlICR7cHJvZmlsZS5mdWxsX25hbWV9IChJRDogJHtwcm9maWxlLmlkfSkgaXMgYWxyZWFkeSBlbnJpY2hlZGApO1xuICAgICAgXG4gICAgICAvLyBGZXRjaCByZWxhdGVkIGRhdGEgKGVkdWNhdGlvbiwgZXhwZXJpZW5jZSwgc2tpbGxzKVxuICAgICAgY29uc3QgeyBkYXRhOiBlZHVjYXRpb24gfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdlZHVjYXRpb24nKVxuICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgLmVxKCdwcm9maWxlX2lkJywgcHJvZmlsZS5pZCk7XG4gICAgICBcbiAgICAgIGNvbnN0IHsgZGF0YTogZXhwZXJpZW5jZSB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3dvcmtfZXhwZXJpZW5jZScpXG4gICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAuZXEoJ3Byb2ZpbGVfaWQnLCBwcm9maWxlLmlkKVxuICAgICAgICAub3JkZXIoJ2lzX2N1cnJlbnQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAgICAgLm9yZGVyKCdlbmRfZGF0ZScsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KTtcbiAgICAgIFxuICAgICAgY29uc3QgeyBkYXRhOiBza2lsbHMgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdza2lsbHMnKVxuICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgLmVxKCdwcm9maWxlX2lkJywgcHJvZmlsZS5pZCk7XG4gICAgICBcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHByb2ZpbGU6IHtcbiAgICAgICAgICAuLi5wcm9maWxlLFxuICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uIHx8IFtdLFxuICAgICAgICAgIGV4cGVyaWVuY2U6IGV4cGVyaWVuY2UgfHwgW10sXG4gICAgICAgICAgc2tpbGxzOiBza2lsbHMgfHwgW11cbiAgICAgICAgfSxcbiAgICAgICAgZW5yaWNoZWQ6IGZhbHNlIC8vIEluZGljYXRlcyB3ZSBkaWRuJ3QgbmVlZCB0byBwZXJmb3JtIGVucmljaG1lbnRcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBJZiB3ZSBnZXQgaGVyZSwgdGhlIHByb2ZpbGUgbmVlZHMgZW5yaWNobWVudFxuICAgIGNvbnNvbGUubG9nKGBFbnJpY2hpbmcgcHJvZmlsZSAke3Byb2ZpbGUuZnVsbF9uYW1lfSAoSUQ6ICR7cHJvZmlsZS5pZH0pYCk7XG4gICAgXG4gICAgLy8gTWFrZSBBUEkgcmVxdWVzdCB0byBBdmlhdG8gZW5yaWNoIGVuZHBvaW50XG4gICAgaWYgKCFBVklBVE9fQVBJX0tFWSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBcIkFQSSBrZXkgbWlzc2luZ1wiLCBtZXNzYWdlOiBcIkF2aWF0byBBUEkga2V5IG5vdCBmb3VuZCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXNcIiB9LFxuICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBQYXJhbWV0ZXJzIGZvciB0aGUgZW5yaWNoIGVuZHBvaW50IC0gaW5jbHVkZSBuZWVkcyB0byBiZSBhIGNvbW1hLXNlcGFyYXRlZCBzdHJpbmcsIG5vdCBhbiBhcnJheVxuICAgICAgY29uc3QgaW5jbHVkZVZhbHVlID0gXCJFRFVDQVRJT04sRVhQRVJJRU5DRSxERUdSRUVTLFNLSUxMU1wiO1xuICAgICAgY29uc3QgdXJsID0gYCR7QVZJQVRPX0FQSV9CQVNFX1VSTH0vcGVyc29uL2VucmljaD9pZD0ke2F2aWF0b19pZH0maW5jbHVkZT0ke2luY2x1ZGVWYWx1ZX1gO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhgTWFraW5nIEFQSSByZXF1ZXN0IHRvIEF2aWF0byBlbnJpY2g6ICR7dXJsfWApO1xuICAgICAgXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7QVZJQVRPX0FQSV9LRVl9YFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQXZpYXRvIEFQSSBlcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9ICR7ZXJyb3JUZXh0fWApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBlbnJpY2hlZERhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IGVucmljaGVkIHByb2ZpbGUgZGF0YSBmb3IgJHtwcm9maWxlLmZ1bGxfbmFtZX1gKTtcbiAgICAgIFxuICAgICAgLy8gRXh0cmFjdCByZWxldmFudCBpbmZvcm1hdGlvbiBmcm9tIGVucmljaGVkIGRhdGFcbiAgICAgIGNvbnN0IHsgbGlua2VkaW5VcmwsIHR3aXR0ZXJVcmwsIGdpdGh1YlVybCB9ID0gZXh0cmFjdFVybHMoZW5yaWNoZWREYXRhLnVybHMpO1xuICAgICAgXG4gICAgICAvLyBEZWJ1ZyB0aGUgZXhwZXJpZW5jZSBkYXRhIHN0cnVjdHVyZVxuICAgICAgY29uc29sZS5sb2coYEV4cGVyaWVuY2UgZGF0YSBzdHJ1Y3R1cmUgc2FtcGxlOmAsIFxuICAgICAgICBKU09OLnN0cmluZ2lmeShlbnJpY2hlZERhdGEuZXhwZXJpZW5jZUxpc3QgJiYgZW5yaWNoZWREYXRhLmV4cGVyaWVuY2VMaXN0Lmxlbmd0aCA+IDAgPyBcbiAgICAgICAgZW5yaWNoZWREYXRhLmV4cGVyaWVuY2VMaXN0WzBdIDoge30sIG51bGwsIDIpLnN1YnN0cmluZygwLCA1MDApKTtcbiAgICAgIFxuICAgICAgLy8gR2V0IHRvcCAzIGV4cGVyaWVuY2VzIGlmIGF2YWlsYWJsZVxuICAgICAgY29uc3QgZXhwZXJpZW5jZXMgPSBlbnJpY2hlZERhdGEuZXhwZXJpZW5jZUxpc3QgfHwgW107XG4gICAgICBleHBlcmllbmNlcy5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xuICAgICAgICBpZiAoYS5pc0N1cnJlbnQgJiYgIWIuaXNDdXJyZW50KSByZXR1cm4gLTE7XG4gICAgICAgIGlmICghYS5pc0N1cnJlbnQgJiYgYi5pc0N1cnJlbnQpIHJldHVybiAxO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgYURhdGUgPSBhLmVuZERhdGUgPyBuZXcgRGF0ZShhLmVuZERhdGUpIDogbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgYkRhdGUgPSBiLmVuZERhdGUgPyBuZXcgRGF0ZShiLmVuZERhdGUpIDogbmV3IERhdGUoKTtcbiAgICAgICAgcmV0dXJuIGJEYXRlLmdldFRpbWUoKSAtIGFEYXRlLmdldFRpbWUoKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZXh0cmFjdCBjb21wYW55IG5hbWUgcHJvcGVybHlcbiAgICAgIGZ1bmN0aW9uIGV4dHJhY3RDb21wYW55TmFtZShleHBJdGVtOiBhbnkpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIWV4cEl0ZW0pIHJldHVybiAnJztcbiAgICAgICAgXG4gICAgICAgIC8vIERlYnVnIHRoZSBjb21wYW55IHN0cnVjdHVyZVxuICAgICAgICBjb25zb2xlLmxvZyhgQ29tcGFueSBzdHJ1Y3R1cmU6YCwgSlNPTi5zdHJpbmdpZnkoZXhwSXRlbSwgbnVsbCwgMikuc3Vic3RyaW5nKDAsIDIwMCkpO1xuICAgICAgICBcbiAgICAgICAgLy8gSWYgY29tcGFueSBpcyBhIHN0cmluZywgdXNlIGl0IGRpcmVjdGx5XG4gICAgICAgIGlmICh0eXBlb2YgZXhwSXRlbS5jb21wYW55ID09PSAnc3RyaW5nJykgcmV0dXJuIGV4cEl0ZW0uY29tcGFueTtcbiAgICAgICAgXG4gICAgICAgIC8vIElmIGNvbXBhbnkgaXMgYW4gb2JqZWN0IHdpdGggYSBuYW1lIHByb3BlcnR5LCB1c2UgdGhhdFxuICAgICAgICBpZiAoZXhwSXRlbS5jb21wYW55ICYmIHR5cGVvZiBleHBJdGVtLmNvbXBhbnkgPT09ICdvYmplY3QnICYmIGV4cEl0ZW0uY29tcGFueS5uYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIGV4cEl0ZW0uY29tcGFueS5uYW1lO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBJZiBjb21wYW55IGlzIGFuIG9iamVjdCB0aGF0IElTIHRoZSBuYW1lIHByb3BlcnR5IChlLmcuLCBzdHJ1Y3R1cmUgc2VlbiBpbiB0aGUgVUkpXG4gICAgICAgIGlmIChleHBJdGVtLm5hbWUgJiYgdHlwZW9mIGV4cEl0ZW0ubmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICByZXR1cm4gZXhwSXRlbS5uYW1lO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBJZiB3ZSBoYXZlIGFuIGluZHVzdHJ5TGlzdCBhcnJheSB3aXRoIG5hbWUgcHJvcGVydGllc1xuICAgICAgICBpZiAoZXhwSXRlbS5pbmR1c3RyeUxpc3QgJiYgQXJyYXkuaXNBcnJheShleHBJdGVtLmluZHVzdHJ5TGlzdCkpIHtcbiAgICAgICAgICBjb25zdCBuYW1lcyA9IGV4cEl0ZW0uaW5kdXN0cnlMaXN0Lm1hcCgoaXRlbTogYW55KSA9PiBcbiAgICAgICAgICAgIHR5cGVvZiBpdGVtID09PSAnc3RyaW5nJyA/IGl0ZW0gOiBcbiAgICAgICAgICAgIChpdGVtLm5hbWUgPyBpdGVtLm5hbWUgOiAnJylcbiAgICAgICAgICApLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAobmFtZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG5hbWVzWzBdO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBtYWxmb3JtZWQgZGF0YSBzaG93aW5nIGluIFVJXG4gICAgICAgIGlmICh0eXBlb2YgZXhwSXRlbSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gVHJ5IHRvIHBhcnNlIGl0IGlmIGl0J3MgYSBKU09OIHN0cmluZ1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gSlNPTi5wYXJzZShleHBJdGVtKTtcbiAgICAgICAgICAgIGlmIChwYXJzZWQubmFtZSkgcmV0dXJuIHBhcnNlZC5uYW1lO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIC8vIElmIGl0J3Mgbm90IHZhbGlkIEpTT04sIGp1c3QgcmV0dXJuIHRoZSBzdHJpbmcgaXRzZWxmXG4gICAgICAgICAgICByZXR1cm4gZXhwSXRlbTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEZhbGxiYWNrIGZvciBkZWJ1Z2dpbmcgLSByZXR1cm4gYSBwbGFjZWhvbGRlciB3aXRoIHRoZSBzdHJ1Y3R1cmVcbiAgICAgICAgY29uc29sZS5sb2coYENvdWxkIG5vdCBleHRyYWN0IGNvbXBhbnkgbmFtZSBmcm9tOmAsIHR5cGVvZiBleHBJdGVtLCBcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoZXhwSXRlbSkuam9pbignLCAnKSk7XG4gICAgICAgIFxuICAgICAgICAvLyBGYWxsIGJhY2sgdG8gZW1wdHkgc3RyaW5nIGlmIHdlIGNhbid0IGRldGVybWluZVxuICAgICAgICByZXR1cm4gJ1Vua25vd24gQ29tcGFueSc7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0byBleHRyYWN0IHRpdGxlIHByb3Blcmx5XG4gICAgICBmdW5jdGlvbiBleHRyYWN0VGl0bGUoZXhwSXRlbTogYW55KTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCFleHBJdGVtKSByZXR1cm4gJyc7XG4gICAgICAgIFxuICAgICAgICAvLyBJZiB0aXRsZSBpcyBhIHN0cmluZywgdXNlIGl0IGRpcmVjdGx5XG4gICAgICAgIGlmICh0eXBlb2YgZXhwSXRlbS50aXRsZSA9PT0gJ3N0cmluZycpIHJldHVybiBleHBJdGVtLnRpdGxlO1xuICAgICAgICBcbiAgICAgICAgLy8gRmFsbCBiYWNrIHRvIGVtcHR5IHN0cmluZyBpZiB3ZSBjYW4ndCBkZXRlcm1pbmVcbiAgICAgICAgcmV0dXJuICcnO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBFeHRyYWN0IGVkdWNhdGlvbiwgZGVncmVlLCBhbmQgbWFqb3IgaW5mb3JtYXRpb25cbiAgICAgIGNvbnN0IGVkdWNhdGlvbiA9IGVucmljaGVkRGF0YS5lZHVjYXRpb25MaXN0IHx8IFtdO1xuICAgICAgXG4gICAgICAvLyBHZXQgdG9wIDMgZXhwZXJpZW5jZXNcbiAgICAgIGNvbnN0IGV4cDEgPSBleHBlcmllbmNlc1swXSB8fCBudWxsO1xuICAgICAgY29uc3QgZXhwMiA9IGV4cGVyaWVuY2VzWzFdIHx8IG51bGw7XG4gICAgICBjb25zdCBleHAzID0gZXhwZXJpZW5jZXNbMl0gfHwgbnVsbDtcbiAgICAgIFxuICAgICAgLy8gUHJlcGFyZSBwcm9maWxlIGRhdGEgdXBkYXRlXG4gICAgICBjb25zdCBwcm9maWxlVXBkYXRlID0ge1xuICAgICAgICAvLyBCYXNpYyBpbmZvIGZyb20gdGhlIGVucmljaGVkIGRhdGFcbiAgICAgICAgaGVhZGxpbmU6IGVucmljaGVkRGF0YS5oZWFkbGluZSB8fCBwcm9maWxlLmhlYWRsaW5lLFxuICAgICAgICB0aXRsZTogZXhwMSA/IGV4dHJhY3RUaXRsZShleHAxKSA6IHByb2ZpbGUudGl0bGUsXG4gICAgICAgIGNvbXBhbnk6IGV4cDEgPyBleHRyYWN0Q29tcGFueU5hbWUoZXhwMSkgOiBwcm9maWxlLmNvbXBhbnksXG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgc29jaWFsIG1lZGlhIGxpbmtzXG4gICAgICAgIGxpbmtlZGluX3VybDogbGlua2VkaW5VcmwsXG4gICAgICAgIHR3aXR0ZXJfdXJsOiB0d2l0dGVyVXJsLFxuICAgICAgICBnaXRodWJfdXJsOiBnaXRodWJVcmwsXG4gICAgICAgIFxuICAgICAgICAvLyBFeHBlcmllbmNlIDFcbiAgICAgICAgZXhwMV90aXRsZTogZXhwMSA/IGV4dHJhY3RUaXRsZShleHAxKSA6IG51bGwsXG4gICAgICAgIGV4cDFfY29tcGFueTogZXhwMSA/IGV4dHJhY3RDb21wYW55TmFtZShleHAxKSA6IG51bGwsXG4gICAgICAgIGV4cDFfc3RhcnRfZGF0ZTogZXhwMSA/IGV4cDEuc3RhcnREYXRlIDogbnVsbCxcbiAgICAgICAgZXhwMV9lbmRfZGF0ZTogZXhwMSA/IGV4cDEuZW5kRGF0ZSA6IG51bGwsXG4gICAgICAgIGV4cDFfZGVzY3JpcHRpb246IGV4cDEgPyBleHAxLmRlc2NyaXB0aW9uIDogJycsXG4gICAgICAgIGV4cDFfaXNfY3VycmVudDogZXhwMSA/IGV4cDEuaXNDdXJyZW50IDogZmFsc2UsXG4gICAgICAgIFxuICAgICAgICAvLyBFeHBlcmllbmNlIDJcbiAgICAgICAgZXhwMl90aXRsZTogZXhwMiA/IGV4dHJhY3RUaXRsZShleHAyKSA6IG51bGwsXG4gICAgICAgIGV4cDJfY29tcGFueTogZXhwMiA/IGV4dHJhY3RDb21wYW55TmFtZShleHAyKSA6IG51bGwsXG4gICAgICAgIGV4cDJfc3RhcnRfZGF0ZTogZXhwMiA/IGV4cDIuc3RhcnREYXRlIDogbnVsbCxcbiAgICAgICAgZXhwMl9lbmRfZGF0ZTogZXhwMiA/IGV4cDIuZW5kRGF0ZSA6IG51bGwsXG4gICAgICAgIGV4cDJfZGVzY3JpcHRpb246IGV4cDIgPyBleHAyLmRlc2NyaXB0aW9uIDogJycsXG4gICAgICAgIGV4cDJfaXNfY3VycmVudDogZXhwMiA/IGV4cDIuaXNDdXJyZW50IDogZmFsc2UsXG4gICAgICAgIFxuICAgICAgICAvLyBFeHBlcmllbmNlIDNcbiAgICAgICAgZXhwM190aXRsZTogZXhwMyA/IGV4dHJhY3RUaXRsZShleHAzKSA6IG51bGwsXG4gICAgICAgIGV4cDNfY29tcGFueTogZXhwMyA/IGV4dHJhY3RDb21wYW55TmFtZShleHAzKSA6IG51bGwsXG4gICAgICAgIGV4cDNfc3RhcnRfZGF0ZTogZXhwMyA/IGV4cDMuc3RhcnREYXRlIDogbnVsbCxcbiAgICAgICAgZXhwM19lbmRfZGF0ZTogZXhwMyA/IGV4cDMuZW5kRGF0ZSA6IG51bGwsXG4gICAgICAgIGV4cDNfZGVzY3JpcHRpb246IGV4cDMgPyBleHAzLmRlc2NyaXB0aW9uIDogJycsXG4gICAgICAgIGV4cDNfaXNfY3VycmVudDogZXhwMyA/IGV4cDMuaXNDdXJyZW50IDogZmFsc2UsXG4gICAgICAgIFxuICAgICAgICAvLyBNYXJrIHByb2ZpbGUgYXMgZW5yaWNoZWRcbiAgICAgICAgaXNfZW5yaWNoZWQ6IHRydWUsXG4gICAgICAgIGxhc3RfdXBkYXRlZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBVcGRhdGUgdGhlIHByb2ZpbGUgaW4gdGhlIGRhdGFiYXNlXG4gICAgICBjb25zdCB7IGRhdGE6IHVwZGF0ZWRQcm9maWxlLCBlcnJvcjogdXBkYXRlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgICAgIC51cGRhdGUocHJvZmlsZVVwZGF0ZSlcbiAgICAgICAgLmVxKCdpZCcsIHByb2ZpbGUuaWQpXG4gICAgICAgIC5zZWxlY3QoKVxuICAgICAgICAuc2luZ2xlKCk7XG4gICAgICBcbiAgICAgIGlmICh1cGRhdGVFcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIHVwZGF0aW5nIHByb2ZpbGU6ICR7dXBkYXRlRXJyb3IubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYFVwZGF0ZWQgcHJvZmlsZSAke3VwZGF0ZWRQcm9maWxlLmZ1bGxfbmFtZX0gKElEOiAke3VwZGF0ZWRQcm9maWxlLmlkfSlgKTtcbiAgICAgIFxuICAgICAgLy8gSW5zZXJ0IGVkdWNhdGlvbiByZWNvcmRzXG4gICAgICBpZiAoZWR1Y2F0aW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBlZHUgb2YgZWR1Y2F0aW9uKSB7XG4gICAgICAgICAgY29uc3Qgc2Nob29sSWQgPSBlZHUuc2Nob29sID8gZWR1LnNjaG9vbC5pZCA6IG51bGw7XG4gICAgICAgICAgY29uc3Qgc2Nob29sTmFtZSA9IGVkdS5uYW1lIHx8IChlZHUuc2Nob29sID8gZWR1LnNjaG9vbC5mdWxsTmFtZSA6ICcnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBsZXQgc3RhcnREYXRlID0gbnVsbDtcbiAgICAgICAgICBsZXQgZW5kRGF0ZSA9IG51bGw7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGVkdS5zdGFydERhdGUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKGVkdS5zdGFydERhdGUpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgQ291bGQgbm90IHBhcnNlIHN0YXJ0IGRhdGU6ICR7ZWR1LnN0YXJ0RGF0ZX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGVkdS5lbmREYXRlKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBlbmREYXRlID0gbmV3IERhdGUoZWR1LmVuZERhdGUpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgQ291bGQgbm90IHBhcnNlIGVuZCBkYXRlOiAke2VkdS5lbmREYXRlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBGaW5kIG1hdGNoaW5nIGRlZ3JlZSBmb3IgdGhpcyBlZHVjYXRpb25cbiAgICAgICAgICBsZXQgZGVncmVlID0gJyc7XG4gICAgICAgICAgbGV0IGZpZWxkT2ZTdHVkeSA9ICcnO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChlbnJpY2hlZERhdGEuZGVncmVlTGlzdCkge1xuICAgICAgICAgICAgY29uc3QgbWF0Y2hpbmdEZWdyZWUgPSBlbnJpY2hlZERhdGEuZGVncmVlTGlzdC5maW5kKChkOiBhbnkpID0+IFxuICAgICAgICAgICAgICBkLnBlcnNvbkVkdWNhdGlvbklEID09PSBlZHUuaWRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChtYXRjaGluZ0RlZ3JlZSkge1xuICAgICAgICAgICAgICBkZWdyZWUgPSBtYXRjaGluZ0RlZ3JlZS5uYW1lIHx8ICcnO1xuICAgICAgICAgICAgICAvLyBUcnkgdG8gZXh0cmFjdCBmaWVsZCBvZiBzdHVkeSBmcm9tIGRlZ3JlZSBuYW1lXG4gICAgICAgICAgICAgIGlmIChkZWdyZWUuaW5jbHVkZXMoJyBpbiAnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gZGVncmVlLnNwbGl0KCcgaW4gJyk7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgIGZpZWxkT2ZTdHVkeSA9IHBhcnRzWzFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBlZHVjYXRpb25EYXRhID0ge1xuICAgICAgICAgICAgcHJvZmlsZV9pZDogcHJvZmlsZS5pZCxcbiAgICAgICAgICAgIHNjaG9vbF9pZDogc2Nob29sSWQsXG4gICAgICAgICAgICBzY2hvb2xfbmFtZTogc2Nob29sTmFtZSxcbiAgICAgICAgICAgIGRlZ3JlZTogZGVncmVlLFxuICAgICAgICAgICAgZmllbGRfb2Zfc3R1ZHk6IGZpZWxkT2ZTdHVkeSxcbiAgICAgICAgICAgIHN0YXJ0X2RhdGU6IHN0YXJ0RGF0ZSxcbiAgICAgICAgICAgIGVuZF9kYXRlOiBlbmREYXRlXG4gICAgICAgICAgfTtcbiAgICAgICAgICBcbiAgICAgICAgICBhd2FpdCBzdXBhYmFzZS5mcm9tKCdlZHVjYXRpb24nKS5pbnNlcnQoW2VkdWNhdGlvbkRhdGFdKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYEFkZGVkICR7ZWR1Y2F0aW9uLmxlbmd0aH0gZWR1Y2F0aW9uIHJlY29yZHMgZm9yICR7dXBkYXRlZFByb2ZpbGUuZnVsbF9uYW1lfWApO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBJbnNlcnQgd29yayBleHBlcmllbmNlc1xuICAgICAgaWYgKGV4cGVyaWVuY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBleHAgb2YgZXhwZXJpZW5jZXMpIHtcbiAgICAgICAgICBjb25zdCB3b3JrRGF0YSA9IHtcbiAgICAgICAgICAgIHByb2ZpbGVfaWQ6IHByb2ZpbGUuaWQsXG4gICAgICAgICAgICBjb21wYW55X25hbWU6IGV4dHJhY3RDb21wYW55TmFtZShleHApLFxuICAgICAgICAgICAgdGl0bGU6IGV4dHJhY3RUaXRsZShleHApLFxuICAgICAgICAgICAgc3RhcnRfZGF0ZTogZXhwLnN0YXJ0RGF0ZSxcbiAgICAgICAgICAgIGVuZF9kYXRlOiBleHAuZW5kRGF0ZSxcbiAgICAgICAgICAgIGlzX2N1cnJlbnQ6IGV4cC5pc0N1cnJlbnRcbiAgICAgICAgICB9O1xuICAgICAgICAgIFxuICAgICAgICAgIGF3YWl0IHN1cGFiYXNlLmZyb20oJ3dvcmtfZXhwZXJpZW5jZScpLmluc2VydChbd29ya0RhdGFdKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYEFkZGVkICR7ZXhwZXJpZW5jZXMubGVuZ3RofSB3b3JrIGV4cGVyaWVuY2VzIGZvciAke3VwZGF0ZWRQcm9maWxlLmZ1bGxfbmFtZX1gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gSW5zZXJ0IHNraWxsc1xuICAgICAgY29uc3Qgc2tpbGxzID0gZW5yaWNoZWREYXRhLnNraWxscyB8fCBbXTtcbiAgICAgIGlmIChza2lsbHMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IHNraWxsIG9mIHNraWxscykge1xuICAgICAgICAgIGF3YWl0IHN1cGFiYXNlLmZyb20oJ3NraWxscycpLmluc2VydChbe1xuICAgICAgICAgICAgcHJvZmlsZV9pZDogcHJvZmlsZS5pZCxcbiAgICAgICAgICAgIHNraWxsX25hbWU6IHNraWxsLm5hbWUgfHwgc2tpbGxcbiAgICAgICAgICB9XSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBBZGRlZCAke3NraWxscy5sZW5ndGh9IHNraWxscyBmb3IgJHt1cGRhdGVkUHJvZmlsZS5mdWxsX25hbWV9YCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEZldGNoIHRoZSBjb21wbGV0ZSB1cGRhdGVkIHByb2ZpbGUgZGF0YSB3aXRoIHJlbGF0ZWQgdGFibGVzXG4gICAgICBjb25zdCB7IGRhdGE6IGVkdWNhdGlvbl9kYXRhIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgnZWR1Y2F0aW9uJylcbiAgICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAgIC5lcSgncHJvZmlsZV9pZCcsIHByb2ZpbGUuaWQpO1xuICAgICAgXG4gICAgICBjb25zdCB7IGRhdGE6IGV4cGVyaWVuY2VfZGF0YSB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3dvcmtfZXhwZXJpZW5jZScpXG4gICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAuZXEoJ3Byb2ZpbGVfaWQnLCBwcm9maWxlLmlkKVxuICAgICAgICAub3JkZXIoJ2lzX2N1cnJlbnQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAgICAgLm9yZGVyKCdlbmRfZGF0ZScsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KTtcbiAgICAgIFxuICAgICAgY29uc3QgeyBkYXRhOiBza2lsbHNfZGF0YSB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3NraWxscycpXG4gICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAuZXEoJ3Byb2ZpbGVfaWQnLCBwcm9maWxlLmlkKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgcHJvZmlsZToge1xuICAgICAgICAgIC4uLnVwZGF0ZWRQcm9maWxlLFxuICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uX2RhdGEgfHwgW10sXG4gICAgICAgICAgZXhwZXJpZW5jZTogZXhwZXJpZW5jZV9kYXRhIHx8IFtdLFxuICAgICAgICAgIHNraWxsczogc2tpbGxzX2RhdGEgfHwgW11cbiAgICAgICAgfSxcbiAgICAgICAgZW5yaWNoZWQ6IHRydWUgLy8gSW5kaWNhdGVzIHdlIHBlcmZvcm1lZCBlbnJpY2htZW50XG4gICAgICB9KTtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGVucmljaGluZyBwcm9maWxlOmAsIGVycm9yKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJFbnJpY2htZW50IGZhaWxlZFwiLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0sXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKGBVbmV4cGVjdGVkIGVycm9yOmAsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBcIlNlcnZlciBlcnJvclwiLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwic3VwYWJhc2UiLCJyZXF1aXJlIiwiQVZJQVRPX0FQSV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiQVZJQVRPX0FQSV9CQVNFX1VSTCIsImV4dHJhY3RVcmxzIiwidXJscyIsImxpbmtlZGluVXJsIiwidHdpdHRlclVybCIsImdpdGh1YlVybCIsImxpbmtlZGluIiwic3RhcnRzV2l0aCIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsInR3aXR0ZXIiLCJnaXRodWIiLCJHRVQiLCJyZXF1ZXN0IiwicGFyYW1zIiwidXJsIiwiVVJMIiwiYXZpYXRvX2lkIiwic2VhcmNoUGFyYW1zIiwiZ2V0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJwcm9maWxlIiwicHJvZmlsZUVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwibWVzc2FnZSIsImlzX2VucmljaGVkIiwiZnVsbF9uYW1lIiwiaWQiLCJlZHVjYXRpb24iLCJleHBlcmllbmNlIiwib3JkZXIiLCJhc2NlbmRpbmciLCJza2lsbHMiLCJlbnJpY2hlZCIsImluY2x1ZGVWYWx1ZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwib2siLCJlcnJvclRleHQiLCJ0ZXh0IiwiRXJyb3IiLCJlbnJpY2hlZERhdGEiLCJKU09OIiwic3RyaW5naWZ5IiwiZXhwZXJpZW5jZUxpc3QiLCJzdWJzdHJpbmciLCJleHBlcmllbmNlcyIsInNvcnQiLCJhIiwiYiIsImlzQ3VycmVudCIsImFEYXRlIiwiZW5kRGF0ZSIsIkRhdGUiLCJiRGF0ZSIsImdldFRpbWUiLCJleHRyYWN0Q29tcGFueU5hbWUiLCJleHBJdGVtIiwiY29tcGFueSIsIm5hbWUiLCJpbmR1c3RyeUxpc3QiLCJuYW1lcyIsIm1hcCIsIml0ZW0iLCJmaWx0ZXIiLCJCb29sZWFuIiwicGFyc2VkIiwicGFyc2UiLCJlIiwiT2JqZWN0Iiwia2V5cyIsImpvaW4iLCJleHRyYWN0VGl0bGUiLCJ0aXRsZSIsImVkdWNhdGlvbkxpc3QiLCJleHAxIiwiZXhwMiIsImV4cDMiLCJwcm9maWxlVXBkYXRlIiwiaGVhZGxpbmUiLCJsaW5rZWRpbl91cmwiLCJ0d2l0dGVyX3VybCIsImdpdGh1Yl91cmwiLCJleHAxX3RpdGxlIiwiZXhwMV9jb21wYW55IiwiZXhwMV9zdGFydF9kYXRlIiwic3RhcnREYXRlIiwiZXhwMV9lbmRfZGF0ZSIsImV4cDFfZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsImV4cDFfaXNfY3VycmVudCIsImV4cDJfdGl0bGUiLCJleHAyX2NvbXBhbnkiLCJleHAyX3N0YXJ0X2RhdGUiLCJleHAyX2VuZF9kYXRlIiwiZXhwMl9kZXNjcmlwdGlvbiIsImV4cDJfaXNfY3VycmVudCIsImV4cDNfdGl0bGUiLCJleHAzX2NvbXBhbnkiLCJleHAzX3N0YXJ0X2RhdGUiLCJleHAzX2VuZF9kYXRlIiwiZXhwM19kZXNjcmlwdGlvbiIsImV4cDNfaXNfY3VycmVudCIsImxhc3RfdXBkYXRlZCIsInRvSVNPU3RyaW5nIiwidXBkYXRlZFByb2ZpbGUiLCJ1cGRhdGVFcnJvciIsInVwZGF0ZSIsImVkdSIsInNjaG9vbElkIiwic2Nob29sIiwic2Nob29sTmFtZSIsImZ1bGxOYW1lIiwiZGVncmVlIiwiZmllbGRPZlN0dWR5IiwiZGVncmVlTGlzdCIsIm1hdGNoaW5nRGVncmVlIiwiZmluZCIsImQiLCJwZXJzb25FZHVjYXRpb25JRCIsImluY2x1ZGVzIiwicGFydHMiLCJzcGxpdCIsImVkdWNhdGlvbkRhdGEiLCJwcm9maWxlX2lkIiwic2Nob29sX2lkIiwic2Nob29sX25hbWUiLCJmaWVsZF9vZl9zdHVkeSIsInN0YXJ0X2RhdGUiLCJlbmRfZGF0ZSIsImluc2VydCIsImV4cCIsIndvcmtEYXRhIiwiY29tcGFueV9uYW1lIiwiaXNfY3VycmVudCIsInNraWxsIiwic2tpbGxfbmFtZSIsImVkdWNhdGlvbl9kYXRhIiwiZXhwZXJpZW5jZV9kYXRhIiwic2tpbGxzX2RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/profiles/enrich/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { createClient } = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n(__webpack_require__(/*! dotenv */ \"(rsc)/./node_modules/dotenv/lib/main.js\").config)({\n    path: \".env.local\"\n});\n// Get environment variables with fallbacks for development\nconst supabaseUrl = \"https://qbzwhueywwpqkucwfnsb.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFiendodWV5d3dwcWt1Y3dmbnNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4MDk4MzEsImV4cCI6MjA1OTM4NTgzMX0.YiZec-9dg4z32pqCuSGGB3uyqrEZs5zm-b_unS_2czs\" || 0;\n// Create Supabase client\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        persistSession: false\n    }\n});\n// Log initialization for debugging\nconsole.log(`Supabase JS client initialized with URL: ${supabaseUrl.substring(0, 20)}...`);\n// Export the client\nmodule.exports = {\n    supabase\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBRUEsWUFBWSxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDLDhGQUF1QjtBQUN4REEscUZBQXdCLENBQUM7SUFBRUUsTUFBTTtBQUFhO0FBRTlDLDJEQUEyRDtBQUMzRCxNQUFNQyxjQUNKQywwQ0FBb0MsSUFDcEMsQ0FBdUM7QUFDekMsTUFBTUcsa0JBQ0pILGtOQUF5QyxJQUFJLENBQWU7QUFFOUQseUJBQXlCO0FBQ3pCLE1BQU1LLFdBQVdWLGFBQWFJLGFBQWFJLGlCQUFpQjtJQUMxREcsTUFBTTtRQUNKQyxnQkFBZ0I7SUFDbEI7QUFDRjtBQUVBLG1DQUFtQztBQUNuQ0MsUUFBUUMsR0FBRyxDQUNULENBQUMseUNBQXlDLEVBQUVWLFlBQVlXLFNBQVMsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDO0FBRy9FLG9CQUFvQjtBQUNwQkMsT0FBT0MsT0FBTyxHQUFHO0lBQUVQO0FBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ndHJhbmtlZC8uL2xpYi9zdXBhYmFzZS5qcz8xNTk4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY3JlYXRlQ2xpZW50IH0gPSByZXF1aXJlKFwiQHN1cGFiYXNlL3N1cGFiYXNlLWpzXCIpO1xucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoeyBwYXRoOiBcIi5lbnYubG9jYWxcIiB9KTtcblxuLy8gR2V0IGVudmlyb25tZW50IHZhcmlhYmxlcyB3aXRoIGZhbGxiYWNrcyBmb3IgZGV2ZWxvcG1lbnRcbmNvbnN0IHN1cGFiYXNlVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8XG4gIFwiaHR0cHM6Ly95b3VyLXN1cGFiYXNlLXVybC5zdXBhYmFzZS5jb1wiO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgXCJ5b3VyLWFub24ta2V5XCI7XG5cbi8vIENyZWF0ZSBTdXBhYmFzZSBjbGllbnRcbmNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgYXV0aDoge1xuICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZSxcbiAgfSxcbn0pO1xuXG4vLyBMb2cgaW5pdGlhbGl6YXRpb24gZm9yIGRlYnVnZ2luZ1xuY29uc29sZS5sb2coXG4gIGBTdXBhYmFzZSBKUyBjbGllbnQgaW5pdGlhbGl6ZWQgd2l0aCBVUkw6ICR7c3VwYWJhc2VVcmwuc3Vic3RyaW5nKDAsIDIwKX0uLi5gXG4pO1xuXG4vLyBFeHBvcnQgdGhlIGNsaWVudFxubW9kdWxlLmV4cG9ydHMgPSB7IHN1cGFiYXNlIH07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwicmVxdWlyZSIsImNvbmZpZyIsInBhdGgiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiYXV0aCIsInBlcnNpc3RTZXNzaW9uIiwiY29uc29sZSIsImxvZyIsInN1YnN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/dotenv","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprofiles%2Fenrich%2Froute&page=%2Fapi%2Fprofiles%2Fenrich%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprofiles%2Fenrich%2Froute.ts&appDir=%2FUsers%2Fvik%2FGTRanked%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvik%2FGTRanked&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();